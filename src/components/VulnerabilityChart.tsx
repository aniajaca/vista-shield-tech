import { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';

interface ChartData {
  criticalCount: number;
  highCount: number;
  mediumCount: number;
  lowCount: number;
  infoCount: number;
}

export const VulnerabilityChart = ({ data }: { data: ChartData }) => {
  const pieData = [
    { name: 'Critical', value: data.criticalCount, color: 'hsl(var(--critical))' },
    { name: 'High', value: data.highCount, color: 'hsl(var(--high))' },
    { name: 'Medium', value: data.mediumCount, color: 'hsl(var(--medium))' },
    { name: 'Low', value: data.lowCount, color: 'hsl(var(--low))' },
    { name: 'Info', value: data.infoCount, color: 'hsl(var(--info))' },
  ];

  const barData = [
    { name: 'Critical', count: data.criticalCount, fill: 'hsl(var(--critical))' },
    { name: 'High', count: data.highCount, fill: 'hsl(var(--high))' },
    { name: 'Medium', count: data.mediumCount, fill: 'hsl(var(--medium))' },
    { name: 'Low', count: data.lowCount, fill: 'hsl(var(--low))' },
    { name: 'Info', count: data.infoCount, fill: 'hsl(var(--info))' },
  ];

  const CustomTooltip = ({ active, payload, label }: any) => {
    if (active && payload && payload.length) {
      return (
        <div className="glass p-3 rounded-lg border">
          <p className="text-sm font-medium">{`${payload[0].name}: ${payload[0].value}`}</p>
        </div>
      );
    }
    return null;
  };

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
      {/* Pie Chart */}
      <div className="h-48">
        <h3 className="text-sm font-medium mb-4 text-center">Distribution</h3>
        <ResponsiveContainer width="100%" height="100%">
          <PieChart>
            <Pie
              data={pieData}
              cx="50%"
              cy="50%"
              innerRadius={40}
              outerRadius={80}
              paddingAngle={2}
              dataKey="value"
            >
              {pieData.map((entry, index) => (
                <Cell 
                  key={`cell-${index}`} 
                  fill={entry.color}
                  stroke={entry.color}
                  strokeWidth={2}
                />
              ))}
            </Pie>
            <Tooltip content={<CustomTooltip />} />
          </PieChart>
        </ResponsiveContainer>
      </div>

      {/* Bar Chart */}
      <div className="h-48">
        <h3 className="text-sm font-medium mb-4 text-center">Count by Severity</h3>
        <ResponsiveContainer width="100%" height="100%">
          <BarChart data={barData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>
            <CartesianGrid strokeDasharray="3 3" stroke="hsl(var(--border))" />
            <XAxis 
              dataKey="name" 
              tick={{ fontSize: 12, fill: 'hsl(var(--muted-foreground))' }}
              axisLine={{ stroke: 'hsl(var(--border))' }}
            />
            <YAxis 
              tick={{ fontSize: 12, fill: 'hsl(var(--muted-foreground))' }}
              axisLine={{ stroke: 'hsl(var(--border))' }}
            />
            <Tooltip content={<CustomTooltip />} />
            <Bar 
              dataKey="count" 
              radius={[4, 4, 0, 0]}
              stroke="hsl(var(--border))"
              strokeWidth={1}
            />
          </BarChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
};